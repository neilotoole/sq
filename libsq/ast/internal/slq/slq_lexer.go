// Code generated from SLQ.g4 by ANTLR 4.12.0. DO NOT EDIT.

package slq

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SLQLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var slqlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func slqlexerLexerInit() {
	staticData := &slqlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "';'", "'*'", "'join'", "'unique'", "'count'", "'.['", "'||'", "'/'",
		"'%'", "'<<'", "'>>'", "'&'", "'&&'", "'~'", "'!'", "'group_by'", "'+'",
		"'-'", "", "", "", "", "'('", "')'", "'['", "']'", "','", "'|'", "':'",
		"", "", "", "'<='", "'<'", "'>='", "'>'", "'!='", "'=='",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "GROUP_BY",
		"ORDER_ASC", "ORDER_DESC", "ORDER_BY", "ALIAS_RESERVED", "ID", "WS",
		"LPAR", "RPAR", "LBRA", "RBRA", "COMMA", "PIPE", "COLON", "NULL", "NN",
		"NUMBER", "LT_EQ", "LT", "GT_EQ", "GT", "NEQ", "EQ", "NAME", "HANDLE",
		"STRING", "LINECOMMENT",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "GROUP_BY", "ORDER_ASC",
		"ORDER_DESC", "ORDER_BY", "ALIAS_RESERVED", "ID", "WS", "LPAR", "RPAR",
		"LBRA", "RBRA", "COMMA", "PIPE", "COLON", "NULL", "NN", "NUMBER", "INTF",
		"EXP", "LT_EQ", "LT", "GT_EQ", "GT", "NEQ", "EQ", "NAME", "HANDLE",
		"STRING", "ESC", "UNICODE", "HEX", "DIGIT", "A", "B", "C", "D", "E",
		"F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S",
		"T", "U", "V", "W", "X", "Y", "Z", "LINECOMMENT",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 42, 465, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3,
		1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9,
		1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1,
		13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 3, 18,
		225, 8, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 19, 3, 19, 270, 8, 19, 1, 20, 1, 20, 5, 20, 274, 8, 20,
		10, 20, 12, 20, 277, 9, 20, 1, 21, 4, 21, 280, 8, 21, 11, 21, 12, 21, 281,
		1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1,
		26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29,
		1, 29, 1, 29, 1, 29, 3, 29, 308, 8, 29, 1, 30, 1, 30, 1, 31, 1, 31, 3,
		31, 314, 8, 31, 1, 31, 1, 31, 1, 31, 4, 31, 319, 8, 31, 11, 31, 12, 31,
		320, 1, 31, 3, 31, 324, 8, 31, 1, 31, 3, 31, 327, 8, 31, 1, 31, 1, 31,
		1, 31, 1, 31, 3, 31, 333, 8, 31, 1, 31, 3, 31, 336, 8, 31, 1, 32, 1, 32,
		1, 32, 5, 32, 341, 8, 32, 10, 32, 12, 32, 344, 9, 32, 3, 32, 346, 8, 32,
		1, 33, 1, 33, 3, 33, 350, 8, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1,
		35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39,
		1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 3, 40, 373, 8, 40, 1, 41, 1, 41, 1,
		41, 1, 42, 1, 42, 1, 42, 5, 42, 381, 8, 42, 10, 42, 12, 42, 384, 9, 42,
		1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 3, 43, 391, 8, 43, 1, 44, 1, 44, 1,
		44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48,
		1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1,
		53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58,
		1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1,
		64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69,
		1, 69, 1, 70, 1, 70, 1, 71, 1, 71, 1, 72, 1, 72, 1, 73, 1, 73, 5, 73, 457,
		8, 73, 10, 73, 12, 73, 460, 9, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 458,
		0, 74, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10,
		21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19,
		39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28,
		57, 29, 59, 30, 61, 31, 63, 32, 65, 0, 67, 0, 69, 33, 71, 34, 73, 35, 75,
		36, 77, 37, 79, 38, 81, 39, 83, 40, 85, 41, 87, 0, 89, 0, 91, 0, 93, 0,
		95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0, 107, 0, 109, 0, 111, 0, 113,
		0, 115, 0, 117, 0, 119, 0, 121, 0, 123, 0, 125, 0, 127, 0, 129, 0, 131,
		0, 133, 0, 135, 0, 137, 0, 139, 0, 141, 0, 143, 0, 145, 0, 147, 42, 1,
		0, 35, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97,
		122, 3, 0, 9, 10, 13, 13, 32, 32, 1, 0, 48, 57, 1, 0, 49, 57, 2, 0, 69,
		69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 34, 34, 92, 92, 8, 0, 34, 34,
		47, 47, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 3, 0, 48,
		57, 65, 70, 97, 102, 2, 0, 65, 65, 97, 97, 2, 0, 66, 66, 98, 98, 2, 0,
		67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 70, 70, 102, 102, 2, 0, 71,
		71, 103, 103, 2, 0, 72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74,
		74, 106, 106, 2, 0, 75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77,
		77, 109, 109, 2, 0, 78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80,
		80, 112, 112, 2, 0, 81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83,
		83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86,
		86, 118, 118, 2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89,
		89, 121, 121, 2, 0, 90, 90, 122, 122, 458, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
		0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
		0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
		0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27,
		1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0,
		35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0,
		0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0,
		0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0,
		0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 69, 1,
		0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77,
		1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0,
		85, 1, 0, 0, 0, 0, 147, 1, 0, 0, 0, 1, 149, 1, 0, 0, 0, 3, 151, 1, 0, 0,
		0, 5, 153, 1, 0, 0, 0, 7, 158, 1, 0, 0, 0, 9, 165, 1, 0, 0, 0, 11, 171,
		1, 0, 0, 0, 13, 174, 1, 0, 0, 0, 15, 177, 1, 0, 0, 0, 17, 179, 1, 0, 0,
		0, 19, 181, 1, 0, 0, 0, 21, 184, 1, 0, 0, 0, 23, 187, 1, 0, 0, 0, 25, 189,
		1, 0, 0, 0, 27, 192, 1, 0, 0, 0, 29, 194, 1, 0, 0, 0, 31, 196, 1, 0, 0,
		0, 33, 205, 1, 0, 0, 0, 35, 207, 1, 0, 0, 0, 37, 224, 1, 0, 0, 0, 39, 269,
		1, 0, 0, 0, 41, 271, 1, 0, 0, 0, 43, 279, 1, 0, 0, 0, 45, 285, 1, 0, 0,
		0, 47, 287, 1, 0, 0, 0, 49, 289, 1, 0, 0, 0, 51, 291, 1, 0, 0, 0, 53, 293,
		1, 0, 0, 0, 55, 295, 1, 0, 0, 0, 57, 297, 1, 0, 0, 0, 59, 307, 1, 0, 0,
		0, 61, 309, 1, 0, 0, 0, 63, 335, 1, 0, 0, 0, 65, 345, 1, 0, 0, 0, 67, 347,
		1, 0, 0, 0, 69, 353, 1, 0, 0, 0, 71, 356, 1, 0, 0, 0, 73, 358, 1, 0, 0,
		0, 75, 361, 1, 0, 0, 0, 77, 363, 1, 0, 0, 0, 79, 366, 1, 0, 0, 0, 81, 369,
		1, 0, 0, 0, 83, 374, 1, 0, 0, 0, 85, 377, 1, 0, 0, 0, 87, 387, 1, 0, 0,
		0, 89, 392, 1, 0, 0, 0, 91, 398, 1, 0, 0, 0, 93, 400, 1, 0, 0, 0, 95, 402,
		1, 0, 0, 0, 97, 404, 1, 0, 0, 0, 99, 406, 1, 0, 0, 0, 101, 408, 1, 0, 0,
		0, 103, 410, 1, 0, 0, 0, 105, 412, 1, 0, 0, 0, 107, 414, 1, 0, 0, 0, 109,
		416, 1, 0, 0, 0, 111, 418, 1, 0, 0, 0, 113, 420, 1, 0, 0, 0, 115, 422,
		1, 0, 0, 0, 117, 424, 1, 0, 0, 0, 119, 426, 1, 0, 0, 0, 121, 428, 1, 0,
		0, 0, 123, 430, 1, 0, 0, 0, 125, 432, 1, 0, 0, 0, 127, 434, 1, 0, 0, 0,
		129, 436, 1, 0, 0, 0, 131, 438, 1, 0, 0, 0, 133, 440, 1, 0, 0, 0, 135,
		442, 1, 0, 0, 0, 137, 444, 1, 0, 0, 0, 139, 446, 1, 0, 0, 0, 141, 448,
		1, 0, 0, 0, 143, 450, 1, 0, 0, 0, 145, 452, 1, 0, 0, 0, 147, 454, 1, 0,
		0, 0, 149, 150, 5, 59, 0, 0, 150, 2, 1, 0, 0, 0, 151, 152, 5, 42, 0, 0,
		152, 4, 1, 0, 0, 0, 153, 154, 5, 106, 0, 0, 154, 155, 5, 111, 0, 0, 155,
		156, 5, 105, 0, 0, 156, 157, 5, 110, 0, 0, 157, 6, 1, 0, 0, 0, 158, 159,
		5, 117, 0, 0, 159, 160, 5, 110, 0, 0, 160, 161, 5, 105, 0, 0, 161, 162,
		5, 113, 0, 0, 162, 163, 5, 117, 0, 0, 163, 164, 5, 101, 0, 0, 164, 8, 1,
		0, 0, 0, 165, 166, 5, 99, 0, 0, 166, 167, 5, 111, 0, 0, 167, 168, 5, 117,
		0, 0, 168, 169, 5, 110, 0, 0, 169, 170, 5, 116, 0, 0, 170, 10, 1, 0, 0,
		0, 171, 172, 5, 46, 0, 0, 172, 173, 5, 91, 0, 0, 173, 12, 1, 0, 0, 0, 174,
		175, 5, 124, 0, 0, 175, 176, 5, 124, 0, 0, 176, 14, 1, 0, 0, 0, 177, 178,
		5, 47, 0, 0, 178, 16, 1, 0, 0, 0, 179, 180, 5, 37, 0, 0, 180, 18, 1, 0,
		0, 0, 181, 182, 5, 60, 0, 0, 182, 183, 5, 60, 0, 0, 183, 20, 1, 0, 0, 0,
		184, 185, 5, 62, 0, 0, 185, 186, 5, 62, 0, 0, 186, 22, 1, 0, 0, 0, 187,
		188, 5, 38, 0, 0, 188, 24, 1, 0, 0, 0, 189, 190, 5, 38, 0, 0, 190, 191,
		5, 38, 0, 0, 191, 26, 1, 0, 0, 0, 192, 193, 5, 126, 0, 0, 193, 28, 1, 0,
		0, 0, 194, 195, 5, 33, 0, 0, 195, 30, 1, 0, 0, 0, 196, 197, 5, 103, 0,
		0, 197, 198, 5, 114, 0, 0, 198, 199, 5, 111, 0, 0, 199, 200, 5, 117, 0,
		0, 200, 201, 5, 112, 0, 0, 201, 202, 5, 95, 0, 0, 202, 203, 5, 98, 0, 0,
		203, 204, 5, 121, 0, 0, 204, 32, 1, 0, 0, 0, 205, 206, 5, 43, 0, 0, 206,
		34, 1, 0, 0, 0, 207, 208, 5, 45, 0, 0, 208, 36, 1, 0, 0, 0, 209, 210, 5,
		111, 0, 0, 210, 211, 5, 114, 0, 0, 211, 212, 5, 100, 0, 0, 212, 213, 5,
		101, 0, 0, 213, 214, 5, 114, 0, 0, 214, 215, 5, 95, 0, 0, 215, 216, 5,
		98, 0, 0, 216, 225, 5, 121, 0, 0, 217, 218, 5, 115, 0, 0, 218, 219, 5,
		111, 0, 0, 219, 220, 5, 114, 0, 0, 220, 221, 5, 116, 0, 0, 221, 222, 5,
		95, 0, 0, 222, 223, 5, 98, 0, 0, 223, 225, 5, 121, 0, 0, 224, 209, 1, 0,
		0, 0, 224, 217, 1, 0, 0, 0, 225, 38, 1, 0, 0, 0, 226, 227, 5, 58, 0, 0,
		227, 228, 5, 99, 0, 0, 228, 229, 5, 111, 0, 0, 229, 230, 5, 117, 0, 0,
		230, 231, 5, 110, 0, 0, 231, 270, 5, 116, 0, 0, 232, 233, 5, 58, 0, 0,
		233, 234, 5, 97, 0, 0, 234, 235, 5, 118, 0, 0, 235, 270, 5, 103, 0, 0,
		236, 237, 5, 58, 0, 0, 237, 238, 5, 103, 0, 0, 238, 239, 5, 114, 0, 0,
		239, 240, 5, 111, 0, 0, 240, 241, 5, 117, 0, 0, 241, 242, 5, 112, 0, 0,
		242, 243, 5, 95, 0, 0, 243, 244, 5, 98, 0, 0, 244, 270, 5, 121, 0, 0, 245,
		246, 5, 58, 0, 0, 246, 247, 5, 109, 0, 0, 247, 248, 5, 97, 0, 0, 248, 270,
		5, 120, 0, 0, 249, 250, 5, 58, 0, 0, 250, 251, 5, 109, 0, 0, 251, 252,
		5, 105, 0, 0, 252, 270, 5, 110, 0, 0, 253, 254, 5, 58, 0, 0, 254, 255,
		5, 111, 0, 0, 255, 256, 5, 114, 0, 0, 256, 257, 5, 100, 0, 0, 257, 258,
		5, 101, 0, 0, 258, 259, 5, 114, 0, 0, 259, 260, 5, 95, 0, 0, 260, 261,
		5, 98, 0, 0, 261, 270, 5, 121, 0, 0, 262, 263, 5, 58, 0, 0, 263, 264, 5,
		117, 0, 0, 264, 265, 5, 110, 0, 0, 265, 266, 5, 105, 0, 0, 266, 267, 5,
		113, 0, 0, 267, 268, 5, 117, 0, 0, 268, 270, 5, 101, 0, 0, 269, 226, 1,
		0, 0, 0, 269, 232, 1, 0, 0, 0, 269, 236, 1, 0, 0, 0, 269, 245, 1, 0, 0,
		0, 269, 249, 1, 0, 0, 0, 269, 253, 1, 0, 0, 0, 269, 262, 1, 0, 0, 0, 270,
		40, 1, 0, 0, 0, 271, 275, 7, 0, 0, 0, 272, 274, 7, 1, 0, 0, 273, 272, 1,
		0, 0, 0, 274, 277, 1, 0, 0, 0, 275, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0,
		0, 276, 42, 1, 0, 0, 0, 277, 275, 1, 0, 0, 0, 278, 280, 7, 2, 0, 0, 279,
		278, 1, 0, 0, 0, 280, 281, 1, 0, 0, 0, 281, 279, 1, 0, 0, 0, 281, 282,
		1, 0, 0, 0, 282, 283, 1, 0, 0, 0, 283, 284, 6, 21, 0, 0, 284, 44, 1, 0,
		0, 0, 285, 286, 5, 40, 0, 0, 286, 46, 1, 0, 0, 0, 287, 288, 5, 41, 0, 0,
		288, 48, 1, 0, 0, 0, 289, 290, 5, 91, 0, 0, 290, 50, 1, 0, 0, 0, 291, 292,
		5, 93, 0, 0, 292, 52, 1, 0, 0, 0, 293, 294, 5, 44, 0, 0, 294, 54, 1, 0,
		0, 0, 295, 296, 5, 124, 0, 0, 296, 56, 1, 0, 0, 0, 297, 298, 5, 58, 0,
		0, 298, 58, 1, 0, 0, 0, 299, 300, 5, 110, 0, 0, 300, 301, 5, 117, 0, 0,
		301, 302, 5, 108, 0, 0, 302, 308, 5, 108, 0, 0, 303, 304, 5, 78, 0, 0,
		304, 305, 5, 85, 0, 0, 305, 306, 5, 76, 0, 0, 306, 308, 5, 76, 0, 0, 307,
		299, 1, 0, 0, 0, 307, 303, 1, 0, 0, 0, 308, 60, 1, 0, 0, 0, 309, 310, 3,
		65, 32, 0, 310, 62, 1, 0, 0, 0, 311, 336, 3, 61, 30, 0, 312, 314, 5, 45,
		0, 0, 313, 312, 1, 0, 0, 0, 313, 314, 1, 0, 0, 0, 314, 315, 1, 0, 0, 0,
		315, 316, 3, 65, 32, 0, 316, 318, 5, 46, 0, 0, 317, 319, 7, 3, 0, 0, 318,
		317, 1, 0, 0, 0, 319, 320, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0, 320, 321,
		1, 0, 0, 0, 321, 323, 1, 0, 0, 0, 322, 324, 3, 67, 33, 0, 323, 322, 1,
		0, 0, 0, 323, 324, 1, 0, 0, 0, 324, 336, 1, 0, 0, 0, 325, 327, 5, 45, 0,
		0, 326, 325, 1, 0, 0, 0, 326, 327, 1, 0, 0, 0, 327, 328, 1, 0, 0, 0, 328,
		329, 3, 65, 32, 0, 329, 330, 3, 67, 33, 0, 330, 336, 1, 0, 0, 0, 331, 333,
		5, 45, 0, 0, 332, 331, 1, 0, 0, 0, 332, 333, 1, 0, 0, 0, 333, 334, 1, 0,
		0, 0, 334, 336, 3, 65, 32, 0, 335, 311, 1, 0, 0, 0, 335, 313, 1, 0, 0,
		0, 335, 326, 1, 0, 0, 0, 335, 332, 1, 0, 0, 0, 336, 64, 1, 0, 0, 0, 337,
		346, 5, 48, 0, 0, 338, 342, 7, 4, 0, 0, 339, 341, 7, 3, 0, 0, 340, 339,
		1, 0, 0, 0, 341, 344, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 342, 343, 1, 0,
		0, 0, 343, 346, 1, 0, 0, 0, 344, 342, 1, 0, 0, 0, 345, 337, 1, 0, 0, 0,
		345, 338, 1, 0, 0, 0, 346, 66, 1, 0, 0, 0, 347, 349, 7, 5, 0, 0, 348, 350,
		7, 6, 0, 0, 349, 348, 1, 0, 0, 0, 349, 350, 1, 0, 0, 0, 350, 351, 1, 0,
		0, 0, 351, 352, 3, 65, 32, 0, 352, 68, 1, 0, 0, 0, 353, 354, 5, 60, 0,
		0, 354, 355, 5, 61, 0, 0, 355, 70, 1, 0, 0, 0, 356, 357, 5, 60, 0, 0, 357,
		72, 1, 0, 0, 0, 358, 359, 5, 62, 0, 0, 359, 360, 5, 61, 0, 0, 360, 74,
		1, 0, 0, 0, 361, 362, 5, 62, 0, 0, 362, 76, 1, 0, 0, 0, 363, 364, 5, 33,
		0, 0, 364, 365, 5, 61, 0, 0, 365, 78, 1, 0, 0, 0, 366, 367, 5, 61, 0, 0,
		367, 368, 5, 61, 0, 0, 368, 80, 1, 0, 0, 0, 369, 372, 5, 46, 0, 0, 370,
		373, 3, 41, 20, 0, 371, 373, 3, 85, 42, 0, 372, 370, 1, 0, 0, 0, 372, 371,
		1, 0, 0, 0, 373, 82, 1, 0, 0, 0, 374, 375, 5, 64, 0, 0, 375, 376, 3, 41,
		20, 0, 376, 84, 1, 0, 0, 0, 377, 382, 5, 34, 0, 0, 378, 381, 3, 87, 43,
		0, 379, 381, 8, 7, 0, 0, 380, 378, 1, 0, 0, 0, 380, 379, 1, 0, 0, 0, 381,
		384, 1, 0, 0, 0, 382, 380, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 385,
		1, 0, 0, 0, 384, 382, 1, 0, 0, 0, 385, 386, 5, 34, 0, 0, 386, 86, 1, 0,
		0, 0, 387, 390, 5, 92, 0, 0, 388, 391, 7, 8, 0, 0, 389, 391, 3, 89, 44,
		0, 390, 388, 1, 0, 0, 0, 390, 389, 1, 0, 0, 0, 391, 88, 1, 0, 0, 0, 392,
		393, 5, 117, 0, 0, 393, 394, 3, 91, 45, 0, 394, 395, 3, 91, 45, 0, 395,
		396, 3, 91, 45, 0, 396, 397, 3, 91, 45, 0, 397, 90, 1, 0, 0, 0, 398, 399,
		7, 9, 0, 0, 399, 92, 1, 0, 0, 0, 400, 401, 7, 3, 0, 0, 401, 94, 1, 0, 0,
		0, 402, 403, 7, 10, 0, 0, 403, 96, 1, 0, 0, 0, 404, 405, 7, 11, 0, 0, 405,
		98, 1, 0, 0, 0, 406, 407, 7, 12, 0, 0, 407, 100, 1, 0, 0, 0, 408, 409,
		7, 13, 0, 0, 409, 102, 1, 0, 0, 0, 410, 411, 7, 5, 0, 0, 411, 104, 1, 0,
		0, 0, 412, 413, 7, 14, 0, 0, 413, 106, 1, 0, 0, 0, 414, 415, 7, 15, 0,
		0, 415, 108, 1, 0, 0, 0, 416, 417, 7, 16, 0, 0, 417, 110, 1, 0, 0, 0, 418,
		419, 7, 17, 0, 0, 419, 112, 1, 0, 0, 0, 420, 421, 7, 18, 0, 0, 421, 114,
		1, 0, 0, 0, 422, 423, 7, 19, 0, 0, 423, 116, 1, 0, 0, 0, 424, 425, 7, 20,
		0, 0, 425, 118, 1, 0, 0, 0, 426, 427, 7, 21, 0, 0, 427, 120, 1, 0, 0, 0,
		428, 429, 7, 22, 0, 0, 429, 122, 1, 0, 0, 0, 430, 431, 7, 23, 0, 0, 431,
		124, 1, 0, 0, 0, 432, 433, 7, 24, 0, 0, 433, 126, 1, 0, 0, 0, 434, 435,
		7, 25, 0, 0, 435, 128, 1, 0, 0, 0, 436, 437, 7, 26, 0, 0, 437, 130, 1,
		0, 0, 0, 438, 439, 7, 27, 0, 0, 439, 132, 1, 0, 0, 0, 440, 441, 7, 28,
		0, 0, 441, 134, 1, 0, 0, 0, 442, 443, 7, 29, 0, 0, 443, 136, 1, 0, 0, 0,
		444, 445, 7, 30, 0, 0, 445, 138, 1, 0, 0, 0, 446, 447, 7, 31, 0, 0, 447,
		140, 1, 0, 0, 0, 448, 449, 7, 32, 0, 0, 449, 142, 1, 0, 0, 0, 450, 451,
		7, 33, 0, 0, 451, 144, 1, 0, 0, 0, 452, 453, 7, 34, 0, 0, 453, 146, 1,
		0, 0, 0, 454, 458, 5, 35, 0, 0, 455, 457, 9, 0, 0, 0, 456, 455, 1, 0, 0,
		0, 457, 460, 1, 0, 0, 0, 458, 459, 1, 0, 0, 0, 458, 456, 1, 0, 0, 0, 459,
		461, 1, 0, 0, 0, 460, 458, 1, 0, 0, 0, 461, 462, 5, 10, 0, 0, 462, 463,
		1, 0, 0, 0, 463, 464, 6, 73, 0, 0, 464, 148, 1, 0, 0, 0, 20, 0, 224, 269,
		275, 281, 307, 313, 320, 323, 326, 332, 335, 342, 345, 349, 372, 380, 382,
		390, 458, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SLQLexerInit initializes any static state used to implement SLQLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSLQLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SLQLexerInit() {
	staticData := &slqlexerLexerStaticData
	staticData.once.Do(slqlexerLexerInit)
}

// NewSLQLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSLQLexer(input antlr.CharStream) *SLQLexer {
	SLQLexerInit()
	l := new(SLQLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &slqlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SLQ.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SLQLexer tokens.
const (
	SLQLexerT__0           = 1
	SLQLexerT__1           = 2
	SLQLexerT__2           = 3
	SLQLexerT__3           = 4
	SLQLexerT__4           = 5
	SLQLexerT__5           = 6
	SLQLexerT__6           = 7
	SLQLexerT__7           = 8
	SLQLexerT__8           = 9
	SLQLexerT__9           = 10
	SLQLexerT__10          = 11
	SLQLexerT__11          = 12
	SLQLexerT__12          = 13
	SLQLexerT__13          = 14
	SLQLexerT__14          = 15
	SLQLexerGROUP_BY       = 16
	SLQLexerORDER_ASC      = 17
	SLQLexerORDER_DESC     = 18
	SLQLexerORDER_BY       = 19
	SLQLexerALIAS_RESERVED = 20
	SLQLexerID             = 21
	SLQLexerWS             = 22
	SLQLexerLPAR           = 23
	SLQLexerRPAR           = 24
	SLQLexerLBRA           = 25
	SLQLexerRBRA           = 26
	SLQLexerCOMMA          = 27
	SLQLexerPIPE           = 28
	SLQLexerCOLON          = 29
	SLQLexerNULL           = 30
	SLQLexerNN             = 31
	SLQLexerNUMBER         = 32
	SLQLexerLT_EQ          = 33
	SLQLexerLT             = 34
	SLQLexerGT_EQ          = 35
	SLQLexerGT             = 36
	SLQLexerNEQ            = 37
	SLQLexerEQ             = 38
	SLQLexerNAME           = 39
	SLQLexerHANDLE         = 40
	SLQLexerSTRING         = 41
	SLQLexerLINECOMMENT    = 42
)
