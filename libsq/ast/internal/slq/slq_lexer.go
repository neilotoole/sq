// Code generated from SLQ.g4 by ANTLR 4.12.0. DO NOT EDIT.

package slq

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SLQLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var slqlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func slqlexerLexerInit() {
	staticData := &slqlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "';'", "'*'", "'join'", "'.['", "'||'", "'/'", "'%'", "'<<'", "'>>'",
		"'&'", "'&&'", "'~'", "'!'", "'group_by'", "'+'", "'-'", "", "", "",
		"'('", "')'", "'['", "']'", "','", "'|'", "':'", "", "", "", "'<='",
		"'<'", "'>='", "'>'", "'!='", "'=='",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "GROUP_BY",
		"ORDER_ASC", "ORDER_DESC", "ORDER_BY", "ID", "WS", "LPAR", "RPAR", "LBRA",
		"RBRA", "COMMA", "PIPE", "COLON", "NULL", "NN", "NUMBER", "LT_EQ", "LT",
		"GT_EQ", "GT", "NEQ", "EQ", "NAME", "HANDLE", "STRING", "LINECOMMENT",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "GROUP_BY", "ORDER_ASC", "ORDER_DESC",
		"ORDER_BY", "ID", "WS", "LPAR", "RPAR", "LBRA", "RBRA", "COMMA", "PIPE",
		"COLON", "NULL", "NN", "NUMBER", "INTF", "EXP", "LT_EQ", "LT", "GT_EQ",
		"GT", "NEQ", "EQ", "NAME", "HANDLE", "STRING", "ESC", "UNICODE", "HEX",
		"DIGIT", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L",
		"M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
		"LINECOMMENT",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 39, 401, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5,
		1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 16, 3, 16, 206, 8, 16, 1, 17, 1, 17, 5, 17, 210, 8, 17, 10, 17,
		12, 17, 213, 9, 17, 1, 18, 4, 18, 216, 8, 18, 11, 18, 12, 18, 217, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 26, 3, 26, 244, 8, 26, 1, 27, 1, 27, 1, 28, 1, 28, 3, 28, 250,
		8, 28, 1, 28, 1, 28, 1, 28, 4, 28, 255, 8, 28, 11, 28, 12, 28, 256, 1,
		28, 3, 28, 260, 8, 28, 1, 28, 3, 28, 263, 8, 28, 1, 28, 1, 28, 1, 28, 1,
		28, 3, 28, 269, 8, 28, 1, 28, 3, 28, 272, 8, 28, 1, 29, 1, 29, 1, 29, 5,
		29, 277, 8, 29, 10, 29, 12, 29, 280, 9, 29, 3, 29, 282, 8, 29, 1, 30, 1,
		30, 3, 30, 286, 8, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1,
		36, 1, 37, 1, 37, 1, 37, 3, 37, 309, 8, 37, 1, 38, 1, 38, 1, 38, 1, 39,
		1, 39, 1, 39, 5, 39, 317, 8, 39, 10, 39, 12, 39, 320, 9, 39, 1, 39, 1,
		39, 1, 40, 1, 40, 1, 40, 3, 40, 327, 8, 40, 1, 41, 1, 41, 1, 41, 1, 41,
		1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1,
		46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51,
		1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1,
		56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61,
		1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1,
		67, 1, 67, 1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 5, 70, 393, 8, 70,
		10, 70, 12, 70, 396, 9, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 394, 0, 71,
		1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 0, 61, 0, 63, 30, 65, 31, 67, 32, 69, 33, 71, 34, 73, 35, 75, 36, 77,
		37, 79, 38, 81, 0, 83, 0, 85, 0, 87, 0, 89, 0, 91, 0, 93, 0, 95, 0, 97,
		0, 99, 0, 101, 0, 103, 0, 105, 0, 107, 0, 109, 0, 111, 0, 113, 0, 115,
		0, 117, 0, 119, 0, 121, 0, 123, 0, 125, 0, 127, 0, 129, 0, 131, 0, 133,
		0, 135, 0, 137, 0, 139, 0, 141, 39, 1, 0, 35, 3, 0, 65, 90, 95, 95, 97,
		122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 3, 0, 9, 10, 13, 13, 32, 32,
		1, 0, 48, 57, 1, 0, 49, 57, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45,
		2, 0, 34, 34, 92, 92, 8, 0, 34, 34, 47, 47, 92, 92, 98, 98, 102, 102, 110,
		110, 114, 114, 116, 116, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 65, 65, 97,
		97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100,
		2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104,
		2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107,
		2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110,
		2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113,
		2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116,
		2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119,
		2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122,
		388, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0,
		0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1,
		0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23,
		1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0,
		31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0,
		0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0,
		0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0,
		0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1,
		0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73,
		1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0,
		141, 1, 0, 0, 0, 1, 143, 1, 0, 0, 0, 3, 145, 1, 0, 0, 0, 5, 147, 1, 0,
		0, 0, 7, 152, 1, 0, 0, 0, 9, 155, 1, 0, 0, 0, 11, 158, 1, 0, 0, 0, 13,
		160, 1, 0, 0, 0, 15, 162, 1, 0, 0, 0, 17, 165, 1, 0, 0, 0, 19, 168, 1,
		0, 0, 0, 21, 170, 1, 0, 0, 0, 23, 173, 1, 0, 0, 0, 25, 175, 1, 0, 0, 0,
		27, 177, 1, 0, 0, 0, 29, 186, 1, 0, 0, 0, 31, 188, 1, 0, 0, 0, 33, 205,
		1, 0, 0, 0, 35, 207, 1, 0, 0, 0, 37, 215, 1, 0, 0, 0, 39, 221, 1, 0, 0,
		0, 41, 223, 1, 0, 0, 0, 43, 225, 1, 0, 0, 0, 45, 227, 1, 0, 0, 0, 47, 229,
		1, 0, 0, 0, 49, 231, 1, 0, 0, 0, 51, 233, 1, 0, 0, 0, 53, 243, 1, 0, 0,
		0, 55, 245, 1, 0, 0, 0, 57, 271, 1, 0, 0, 0, 59, 281, 1, 0, 0, 0, 61, 283,
		1, 0, 0, 0, 63, 289, 1, 0, 0, 0, 65, 292, 1, 0, 0, 0, 67, 294, 1, 0, 0,
		0, 69, 297, 1, 0, 0, 0, 71, 299, 1, 0, 0, 0, 73, 302, 1, 0, 0, 0, 75, 305,
		1, 0, 0, 0, 77, 310, 1, 0, 0, 0, 79, 313, 1, 0, 0, 0, 81, 323, 1, 0, 0,
		0, 83, 328, 1, 0, 0, 0, 85, 334, 1, 0, 0, 0, 87, 336, 1, 0, 0, 0, 89, 338,
		1, 0, 0, 0, 91, 340, 1, 0, 0, 0, 93, 342, 1, 0, 0, 0, 95, 344, 1, 0, 0,
		0, 97, 346, 1, 0, 0, 0, 99, 348, 1, 0, 0, 0, 101, 350, 1, 0, 0, 0, 103,
		352, 1, 0, 0, 0, 105, 354, 1, 0, 0, 0, 107, 356, 1, 0, 0, 0, 109, 358,
		1, 0, 0, 0, 111, 360, 1, 0, 0, 0, 113, 362, 1, 0, 0, 0, 115, 364, 1, 0,
		0, 0, 117, 366, 1, 0, 0, 0, 119, 368, 1, 0, 0, 0, 121, 370, 1, 0, 0, 0,
		123, 372, 1, 0, 0, 0, 125, 374, 1, 0, 0, 0, 127, 376, 1, 0, 0, 0, 129,
		378, 1, 0, 0, 0, 131, 380, 1, 0, 0, 0, 133, 382, 1, 0, 0, 0, 135, 384,
		1, 0, 0, 0, 137, 386, 1, 0, 0, 0, 139, 388, 1, 0, 0, 0, 141, 390, 1, 0,
		0, 0, 143, 144, 5, 59, 0, 0, 144, 2, 1, 0, 0, 0, 145, 146, 5, 42, 0, 0,
		146, 4, 1, 0, 0, 0, 147, 148, 5, 106, 0, 0, 148, 149, 5, 111, 0, 0, 149,
		150, 5, 105, 0, 0, 150, 151, 5, 110, 0, 0, 151, 6, 1, 0, 0, 0, 152, 153,
		5, 46, 0, 0, 153, 154, 5, 91, 0, 0, 154, 8, 1, 0, 0, 0, 155, 156, 5, 124,
		0, 0, 156, 157, 5, 124, 0, 0, 157, 10, 1, 0, 0, 0, 158, 159, 5, 47, 0,
		0, 159, 12, 1, 0, 0, 0, 160, 161, 5, 37, 0, 0, 161, 14, 1, 0, 0, 0, 162,
		163, 5, 60, 0, 0, 163, 164, 5, 60, 0, 0, 164, 16, 1, 0, 0, 0, 165, 166,
		5, 62, 0, 0, 166, 167, 5, 62, 0, 0, 167, 18, 1, 0, 0, 0, 168, 169, 5, 38,
		0, 0, 169, 20, 1, 0, 0, 0, 170, 171, 5, 38, 0, 0, 171, 172, 5, 38, 0, 0,
		172, 22, 1, 0, 0, 0, 173, 174, 5, 126, 0, 0, 174, 24, 1, 0, 0, 0, 175,
		176, 5, 33, 0, 0, 176, 26, 1, 0, 0, 0, 177, 178, 5, 103, 0, 0, 178, 179,
		5, 114, 0, 0, 179, 180, 5, 111, 0, 0, 180, 181, 5, 117, 0, 0, 181, 182,
		5, 112, 0, 0, 182, 183, 5, 95, 0, 0, 183, 184, 5, 98, 0, 0, 184, 185, 5,
		121, 0, 0, 185, 28, 1, 0, 0, 0, 186, 187, 5, 43, 0, 0, 187, 30, 1, 0, 0,
		0, 188, 189, 5, 45, 0, 0, 189, 32, 1, 0, 0, 0, 190, 191, 5, 111, 0, 0,
		191, 192, 5, 114, 0, 0, 192, 193, 5, 100, 0, 0, 193, 194, 5, 101, 0, 0,
		194, 195, 5, 114, 0, 0, 195, 196, 5, 95, 0, 0, 196, 197, 5, 98, 0, 0, 197,
		206, 5, 121, 0, 0, 198, 199, 5, 115, 0, 0, 199, 200, 5, 111, 0, 0, 200,
		201, 5, 114, 0, 0, 201, 202, 5, 116, 0, 0, 202, 203, 5, 95, 0, 0, 203,
		204, 5, 98, 0, 0, 204, 206, 5, 121, 0, 0, 205, 190, 1, 0, 0, 0, 205, 198,
		1, 0, 0, 0, 206, 34, 1, 0, 0, 0, 207, 211, 7, 0, 0, 0, 208, 210, 7, 1,
		0, 0, 209, 208, 1, 0, 0, 0, 210, 213, 1, 0, 0, 0, 211, 209, 1, 0, 0, 0,
		211, 212, 1, 0, 0, 0, 212, 36, 1, 0, 0, 0, 213, 211, 1, 0, 0, 0, 214, 216,
		7, 2, 0, 0, 215, 214, 1, 0, 0, 0, 216, 217, 1, 0, 0, 0, 217, 215, 1, 0,
		0, 0, 217, 218, 1, 0, 0, 0, 218, 219, 1, 0, 0, 0, 219, 220, 6, 18, 0, 0,
		220, 38, 1, 0, 0, 0, 221, 222, 5, 40, 0, 0, 222, 40, 1, 0, 0, 0, 223, 224,
		5, 41, 0, 0, 224, 42, 1, 0, 0, 0, 225, 226, 5, 91, 0, 0, 226, 44, 1, 0,
		0, 0, 227, 228, 5, 93, 0, 0, 228, 46, 1, 0, 0, 0, 229, 230, 5, 44, 0, 0,
		230, 48, 1, 0, 0, 0, 231, 232, 5, 124, 0, 0, 232, 50, 1, 0, 0, 0, 233,
		234, 5, 58, 0, 0, 234, 52, 1, 0, 0, 0, 235, 236, 5, 110, 0, 0, 236, 237,
		5, 117, 0, 0, 237, 238, 5, 108, 0, 0, 238, 244, 5, 108, 0, 0, 239, 240,
		5, 78, 0, 0, 240, 241, 5, 85, 0, 0, 241, 242, 5, 76, 0, 0, 242, 244, 5,
		76, 0, 0, 243, 235, 1, 0, 0, 0, 243, 239, 1, 0, 0, 0, 244, 54, 1, 0, 0,
		0, 245, 246, 3, 59, 29, 0, 246, 56, 1, 0, 0, 0, 247, 272, 3, 55, 27, 0,
		248, 250, 5, 45, 0, 0, 249, 248, 1, 0, 0, 0, 249, 250, 1, 0, 0, 0, 250,
		251, 1, 0, 0, 0, 251, 252, 3, 59, 29, 0, 252, 254, 5, 46, 0, 0, 253, 255,
		7, 3, 0, 0, 254, 253, 1, 0, 0, 0, 255, 256, 1, 0, 0, 0, 256, 254, 1, 0,
		0, 0, 256, 257, 1, 0, 0, 0, 257, 259, 1, 0, 0, 0, 258, 260, 3, 61, 30,
		0, 259, 258, 1, 0, 0, 0, 259, 260, 1, 0, 0, 0, 260, 272, 1, 0, 0, 0, 261,
		263, 5, 45, 0, 0, 262, 261, 1, 0, 0, 0, 262, 263, 1, 0, 0, 0, 263, 264,
		1, 0, 0, 0, 264, 265, 3, 59, 29, 0, 265, 266, 3, 61, 30, 0, 266, 272, 1,
		0, 0, 0, 267, 269, 5, 45, 0, 0, 268, 267, 1, 0, 0, 0, 268, 269, 1, 0, 0,
		0, 269, 270, 1, 0, 0, 0, 270, 272, 3, 59, 29, 0, 271, 247, 1, 0, 0, 0,
		271, 249, 1, 0, 0, 0, 271, 262, 1, 0, 0, 0, 271, 268, 1, 0, 0, 0, 272,
		58, 1, 0, 0, 0, 273, 282, 5, 48, 0, 0, 274, 278, 7, 4, 0, 0, 275, 277,
		7, 3, 0, 0, 276, 275, 1, 0, 0, 0, 277, 280, 1, 0, 0, 0, 278, 276, 1, 0,
		0, 0, 278, 279, 1, 0, 0, 0, 279, 282, 1, 0, 0, 0, 280, 278, 1, 0, 0, 0,
		281, 273, 1, 0, 0, 0, 281, 274, 1, 0, 0, 0, 282, 60, 1, 0, 0, 0, 283, 285,
		7, 5, 0, 0, 284, 286, 7, 6, 0, 0, 285, 284, 1, 0, 0, 0, 285, 286, 1, 0,
		0, 0, 286, 287, 1, 0, 0, 0, 287, 288, 3, 59, 29, 0, 288, 62, 1, 0, 0, 0,
		289, 290, 5, 60, 0, 0, 290, 291, 5, 61, 0, 0, 291, 64, 1, 0, 0, 0, 292,
		293, 5, 60, 0, 0, 293, 66, 1, 0, 0, 0, 294, 295, 5, 62, 0, 0, 295, 296,
		5, 61, 0, 0, 296, 68, 1, 0, 0, 0, 297, 298, 5, 62, 0, 0, 298, 70, 1, 0,
		0, 0, 299, 300, 5, 33, 0, 0, 300, 301, 5, 61, 0, 0, 301, 72, 1, 0, 0, 0,
		302, 303, 5, 61, 0, 0, 303, 304, 5, 61, 0, 0, 304, 74, 1, 0, 0, 0, 305,
		308, 5, 46, 0, 0, 306, 309, 3, 35, 17, 0, 307, 309, 3, 79, 39, 0, 308,
		306, 1, 0, 0, 0, 308, 307, 1, 0, 0, 0, 309, 76, 1, 0, 0, 0, 310, 311, 5,
		64, 0, 0, 311, 312, 3, 35, 17, 0, 312, 78, 1, 0, 0, 0, 313, 318, 5, 34,
		0, 0, 314, 317, 3, 81, 40, 0, 315, 317, 8, 7, 0, 0, 316, 314, 1, 0, 0,
		0, 316, 315, 1, 0, 0, 0, 317, 320, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 318,
		319, 1, 0, 0, 0, 319, 321, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0, 321, 322,
		5, 34, 0, 0, 322, 80, 1, 0, 0, 0, 323, 326, 5, 92, 0, 0, 324, 327, 7, 8,
		0, 0, 325, 327, 3, 83, 41, 0, 326, 324, 1, 0, 0, 0, 326, 325, 1, 0, 0,
		0, 327, 82, 1, 0, 0, 0, 328, 329, 5, 117, 0, 0, 329, 330, 3, 85, 42, 0,
		330, 331, 3, 85, 42, 0, 331, 332, 3, 85, 42, 0, 332, 333, 3, 85, 42, 0,
		333, 84, 1, 0, 0, 0, 334, 335, 7, 9, 0, 0, 335, 86, 1, 0, 0, 0, 336, 337,
		7, 3, 0, 0, 337, 88, 1, 0, 0, 0, 338, 339, 7, 10, 0, 0, 339, 90, 1, 0,
		0, 0, 340, 341, 7, 11, 0, 0, 341, 92, 1, 0, 0, 0, 342, 343, 7, 12, 0, 0,
		343, 94, 1, 0, 0, 0, 344, 345, 7, 13, 0, 0, 345, 96, 1, 0, 0, 0, 346, 347,
		7, 5, 0, 0, 347, 98, 1, 0, 0, 0, 348, 349, 7, 14, 0, 0, 349, 100, 1, 0,
		0, 0, 350, 351, 7, 15, 0, 0, 351, 102, 1, 0, 0, 0, 352, 353, 7, 16, 0,
		0, 353, 104, 1, 0, 0, 0, 354, 355, 7, 17, 0, 0, 355, 106, 1, 0, 0, 0, 356,
		357, 7, 18, 0, 0, 357, 108, 1, 0, 0, 0, 358, 359, 7, 19, 0, 0, 359, 110,
		1, 0, 0, 0, 360, 361, 7, 20, 0, 0, 361, 112, 1, 0, 0, 0, 362, 363, 7, 21,
		0, 0, 363, 114, 1, 0, 0, 0, 364, 365, 7, 22, 0, 0, 365, 116, 1, 0, 0, 0,
		366, 367, 7, 23, 0, 0, 367, 118, 1, 0, 0, 0, 368, 369, 7, 24, 0, 0, 369,
		120, 1, 0, 0, 0, 370, 371, 7, 25, 0, 0, 371, 122, 1, 0, 0, 0, 372, 373,
		7, 26, 0, 0, 373, 124, 1, 0, 0, 0, 374, 375, 7, 27, 0, 0, 375, 126, 1,
		0, 0, 0, 376, 377, 7, 28, 0, 0, 377, 128, 1, 0, 0, 0, 378, 379, 7, 29,
		0, 0, 379, 130, 1, 0, 0, 0, 380, 381, 7, 30, 0, 0, 381, 132, 1, 0, 0, 0,
		382, 383, 7, 31, 0, 0, 383, 134, 1, 0, 0, 0, 384, 385, 7, 32, 0, 0, 385,
		136, 1, 0, 0, 0, 386, 387, 7, 33, 0, 0, 387, 138, 1, 0, 0, 0, 388, 389,
		7, 34, 0, 0, 389, 140, 1, 0, 0, 0, 390, 394, 5, 35, 0, 0, 391, 393, 9,
		0, 0, 0, 392, 391, 1, 0, 0, 0, 393, 396, 1, 0, 0, 0, 394, 395, 1, 0, 0,
		0, 394, 392, 1, 0, 0, 0, 395, 397, 1, 0, 0, 0, 396, 394, 1, 0, 0, 0, 397,
		398, 5, 10, 0, 0, 398, 399, 1, 0, 0, 0, 399, 400, 6, 70, 0, 0, 400, 142,
		1, 0, 0, 0, 19, 0, 205, 211, 217, 243, 249, 256, 259, 262, 268, 271, 278,
		281, 285, 308, 316, 318, 326, 394, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SLQLexerInit initializes any static state used to implement SLQLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSLQLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SLQLexerInit() {
	staticData := &slqlexerLexerStaticData
	staticData.once.Do(slqlexerLexerInit)
}

// NewSLQLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSLQLexer(input antlr.CharStream) *SLQLexer {
	SLQLexerInit()
	l := new(SLQLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &slqlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SLQ.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SLQLexer tokens.
const (
	SLQLexerT__0        = 1
	SLQLexerT__1        = 2
	SLQLexerT__2        = 3
	SLQLexerT__3        = 4
	SLQLexerT__4        = 5
	SLQLexerT__5        = 6
	SLQLexerT__6        = 7
	SLQLexerT__7        = 8
	SLQLexerT__8        = 9
	SLQLexerT__9        = 10
	SLQLexerT__10       = 11
	SLQLexerT__11       = 12
	SLQLexerT__12       = 13
	SLQLexerGROUP_BY    = 14
	SLQLexerORDER_ASC   = 15
	SLQLexerORDER_DESC  = 16
	SLQLexerORDER_BY    = 17
	SLQLexerID          = 18
	SLQLexerWS          = 19
	SLQLexerLPAR        = 20
	SLQLexerRPAR        = 21
	SLQLexerLBRA        = 22
	SLQLexerRBRA        = 23
	SLQLexerCOMMA       = 24
	SLQLexerPIPE        = 25
	SLQLexerCOLON       = 26
	SLQLexerNULL        = 27
	SLQLexerNN          = 28
	SLQLexerNUMBER      = 29
	SLQLexerLT_EQ       = 30
	SLQLexerLT          = 31
	SLQLexerGT_EQ       = 32
	SLQLexerGT          = 33
	SLQLexerNEQ         = 34
	SLQLexerEQ          = 35
	SLQLexerNAME        = 36
	SLQLexerHANDLE      = 37
	SLQLexerSTRING      = 38
	SLQLexerLINECOMMENT = 39
)
