// Code generated from SLQ.g4 by ANTLR 4.12.0. DO NOT EDIT.

package slq

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SLQLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var slqlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func slqlexerLexerInit() {
	staticData := &slqlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "';'", "'*'", "'join'", "'unique'", "'count'", "'.['", "'||'", "'/'",
		"'%'", "'<<'", "'>>'", "'&'", "'&&'", "'~'", "'!'", "'group_by'", "'+'",
		"'-'", "", "", "", "'('", "')'", "'['", "']'", "','", "'|'", "':'",
		"", "", "", "'<='", "'<'", "'>='", "'>'", "'!='", "'=='",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "GROUP_BY",
		"ORDER_ASC", "ORDER_DESC", "ORDER_BY", "ID", "WS", "LPAR", "RPAR", "LBRA",
		"RBRA", "COMMA", "PIPE", "COLON", "NULL", "NN", "NUMBER", "LT_EQ", "LT",
		"GT_EQ", "GT", "NEQ", "EQ", "NAME", "HANDLE", "STRING", "LINECOMMENT",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "GROUP_BY", "ORDER_ASC",
		"ORDER_DESC", "ORDER_BY", "ID", "WS", "LPAR", "RPAR", "LBRA", "RBRA",
		"COMMA", "PIPE", "COLON", "NULL", "NN", "NUMBER", "INTF", "EXP", "LT_EQ",
		"LT", "GT_EQ", "GT", "NEQ", "EQ", "NAME", "HANDLE", "STRING", "ESC",
		"UNICODE", "HEX", "DIGIT", "A", "B", "C", "D", "E", "F", "G", "H", "I",
		"J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W",
		"X", "Y", "Z", "LINECOMMENT",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 41, 418, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 1,
		0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1,
		5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1,
		10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1,
		16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 3, 18, 223, 8, 18, 1,
		19, 1, 19, 5, 19, 227, 8, 19, 10, 19, 12, 19, 230, 9, 19, 1, 20, 4, 20,
		233, 8, 20, 11, 20, 12, 20, 234, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1,
		22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27,
		1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 3, 28, 261, 8,
		28, 1, 29, 1, 29, 1, 30, 1, 30, 3, 30, 267, 8, 30, 1, 30, 1, 30, 1, 30,
		4, 30, 272, 8, 30, 11, 30, 12, 30, 273, 1, 30, 3, 30, 277, 8, 30, 1, 30,
		3, 30, 280, 8, 30, 1, 30, 1, 30, 1, 30, 1, 30, 3, 30, 286, 8, 30, 1, 30,
		3, 30, 289, 8, 30, 1, 31, 1, 31, 1, 31, 5, 31, 294, 8, 31, 10, 31, 12,
		31, 297, 9, 31, 3, 31, 299, 8, 31, 1, 32, 1, 32, 3, 32, 303, 8, 32, 1,
		32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 3,
		39, 326, 8, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 5, 41, 334, 8,
		41, 10, 41, 12, 41, 337, 9, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 3, 42,
		344, 8, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1,
		45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50,
		1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1,
		55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60,
		1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1,
		66, 1, 66, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1, 71,
		1, 71, 1, 72, 1, 72, 5, 72, 410, 8, 72, 10, 72, 12, 72, 413, 9, 72, 1,
		72, 1, 72, 1, 72, 1, 72, 1, 411, 0, 73, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11,
		6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
		31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24,
		49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 0, 65, 0, 67,
		32, 69, 33, 71, 34, 73, 35, 75, 36, 77, 37, 79, 38, 81, 39, 83, 40, 85,
		0, 87, 0, 89, 0, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105,
		0, 107, 0, 109, 0, 111, 0, 113, 0, 115, 0, 117, 0, 119, 0, 121, 0, 123,
		0, 125, 0, 127, 0, 129, 0, 131, 0, 133, 0, 135, 0, 137, 0, 139, 0, 141,
		0, 143, 0, 145, 41, 1, 0, 35, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48,
		57, 65, 90, 95, 95, 97, 122, 3, 0, 9, 10, 13, 13, 32, 32, 1, 0, 48, 57,
		1, 0, 49, 57, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 34, 34,
		92, 92, 8, 0, 34, 34, 47, 47, 92, 92, 98, 98, 102, 102, 110, 110, 114,
		114, 116, 116, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 65, 65, 97, 97, 2,
		0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0,
		70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104, 2, 0,
		73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107, 2, 0,
		76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110, 2, 0,
		79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113, 2, 0,
		82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0,
		85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119, 2, 0,
		88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122, 405,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0,
		47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0,
		0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
		0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0,
		0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1,
		0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 1, 147, 1, 0, 0, 0, 3,
		149, 1, 0, 0, 0, 5, 151, 1, 0, 0, 0, 7, 156, 1, 0, 0, 0, 9, 163, 1, 0,
		0, 0, 11, 169, 1, 0, 0, 0, 13, 172, 1, 0, 0, 0, 15, 175, 1, 0, 0, 0, 17,
		177, 1, 0, 0, 0, 19, 179, 1, 0, 0, 0, 21, 182, 1, 0, 0, 0, 23, 185, 1,
		0, 0, 0, 25, 187, 1, 0, 0, 0, 27, 190, 1, 0, 0, 0, 29, 192, 1, 0, 0, 0,
		31, 194, 1, 0, 0, 0, 33, 203, 1, 0, 0, 0, 35, 205, 1, 0, 0, 0, 37, 222,
		1, 0, 0, 0, 39, 224, 1, 0, 0, 0, 41, 232, 1, 0, 0, 0, 43, 238, 1, 0, 0,
		0, 45, 240, 1, 0, 0, 0, 47, 242, 1, 0, 0, 0, 49, 244, 1, 0, 0, 0, 51, 246,
		1, 0, 0, 0, 53, 248, 1, 0, 0, 0, 55, 250, 1, 0, 0, 0, 57, 260, 1, 0, 0,
		0, 59, 262, 1, 0, 0, 0, 61, 288, 1, 0, 0, 0, 63, 298, 1, 0, 0, 0, 65, 300,
		1, 0, 0, 0, 67, 306, 1, 0, 0, 0, 69, 309, 1, 0, 0, 0, 71, 311, 1, 0, 0,
		0, 73, 314, 1, 0, 0, 0, 75, 316, 1, 0, 0, 0, 77, 319, 1, 0, 0, 0, 79, 322,
		1, 0, 0, 0, 81, 327, 1, 0, 0, 0, 83, 330, 1, 0, 0, 0, 85, 340, 1, 0, 0,
		0, 87, 345, 1, 0, 0, 0, 89, 351, 1, 0, 0, 0, 91, 353, 1, 0, 0, 0, 93, 355,
		1, 0, 0, 0, 95, 357, 1, 0, 0, 0, 97, 359, 1, 0, 0, 0, 99, 361, 1, 0, 0,
		0, 101, 363, 1, 0, 0, 0, 103, 365, 1, 0, 0, 0, 105, 367, 1, 0, 0, 0, 107,
		369, 1, 0, 0, 0, 109, 371, 1, 0, 0, 0, 111, 373, 1, 0, 0, 0, 113, 375,
		1, 0, 0, 0, 115, 377, 1, 0, 0, 0, 117, 379, 1, 0, 0, 0, 119, 381, 1, 0,
		0, 0, 121, 383, 1, 0, 0, 0, 123, 385, 1, 0, 0, 0, 125, 387, 1, 0, 0, 0,
		127, 389, 1, 0, 0, 0, 129, 391, 1, 0, 0, 0, 131, 393, 1, 0, 0, 0, 133,
		395, 1, 0, 0, 0, 135, 397, 1, 0, 0, 0, 137, 399, 1, 0, 0, 0, 139, 401,
		1, 0, 0, 0, 141, 403, 1, 0, 0, 0, 143, 405, 1, 0, 0, 0, 145, 407, 1, 0,
		0, 0, 147, 148, 5, 59, 0, 0, 148, 2, 1, 0, 0, 0, 149, 150, 5, 42, 0, 0,
		150, 4, 1, 0, 0, 0, 151, 152, 5, 106, 0, 0, 152, 153, 5, 111, 0, 0, 153,
		154, 5, 105, 0, 0, 154, 155, 5, 110, 0, 0, 155, 6, 1, 0, 0, 0, 156, 157,
		5, 117, 0, 0, 157, 158, 5, 110, 0, 0, 158, 159, 5, 105, 0, 0, 159, 160,
		5, 113, 0, 0, 160, 161, 5, 117, 0, 0, 161, 162, 5, 101, 0, 0, 162, 8, 1,
		0, 0, 0, 163, 164, 5, 99, 0, 0, 164, 165, 5, 111, 0, 0, 165, 166, 5, 117,
		0, 0, 166, 167, 5, 110, 0, 0, 167, 168, 5, 116, 0, 0, 168, 10, 1, 0, 0,
		0, 169, 170, 5, 46, 0, 0, 170, 171, 5, 91, 0, 0, 171, 12, 1, 0, 0, 0, 172,
		173, 5, 124, 0, 0, 173, 174, 5, 124, 0, 0, 174, 14, 1, 0, 0, 0, 175, 176,
		5, 47, 0, 0, 176, 16, 1, 0, 0, 0, 177, 178, 5, 37, 0, 0, 178, 18, 1, 0,
		0, 0, 179, 180, 5, 60, 0, 0, 180, 181, 5, 60, 0, 0, 181, 20, 1, 0, 0, 0,
		182, 183, 5, 62, 0, 0, 183, 184, 5, 62, 0, 0, 184, 22, 1, 0, 0, 0, 185,
		186, 5, 38, 0, 0, 186, 24, 1, 0, 0, 0, 187, 188, 5, 38, 0, 0, 188, 189,
		5, 38, 0, 0, 189, 26, 1, 0, 0, 0, 190, 191, 5, 126, 0, 0, 191, 28, 1, 0,
		0, 0, 192, 193, 5, 33, 0, 0, 193, 30, 1, 0, 0, 0, 194, 195, 5, 103, 0,
		0, 195, 196, 5, 114, 0, 0, 196, 197, 5, 111, 0, 0, 197, 198, 5, 117, 0,
		0, 198, 199, 5, 112, 0, 0, 199, 200, 5, 95, 0, 0, 200, 201, 5, 98, 0, 0,
		201, 202, 5, 121, 0, 0, 202, 32, 1, 0, 0, 0, 203, 204, 5, 43, 0, 0, 204,
		34, 1, 0, 0, 0, 205, 206, 5, 45, 0, 0, 206, 36, 1, 0, 0, 0, 207, 208, 5,
		111, 0, 0, 208, 209, 5, 114, 0, 0, 209, 210, 5, 100, 0, 0, 210, 211, 5,
		101, 0, 0, 211, 212, 5, 114, 0, 0, 212, 213, 5, 95, 0, 0, 213, 214, 5,
		98, 0, 0, 214, 223, 5, 121, 0, 0, 215, 216, 5, 115, 0, 0, 216, 217, 5,
		111, 0, 0, 217, 218, 5, 114, 0, 0, 218, 219, 5, 116, 0, 0, 219, 220, 5,
		95, 0, 0, 220, 221, 5, 98, 0, 0, 221, 223, 5, 121, 0, 0, 222, 207, 1, 0,
		0, 0, 222, 215, 1, 0, 0, 0, 223, 38, 1, 0, 0, 0, 224, 228, 7, 0, 0, 0,
		225, 227, 7, 1, 0, 0, 226, 225, 1, 0, 0, 0, 227, 230, 1, 0, 0, 0, 228,
		226, 1, 0, 0, 0, 228, 229, 1, 0, 0, 0, 229, 40, 1, 0, 0, 0, 230, 228, 1,
		0, 0, 0, 231, 233, 7, 2, 0, 0, 232, 231, 1, 0, 0, 0, 233, 234, 1, 0, 0,
		0, 234, 232, 1, 0, 0, 0, 234, 235, 1, 0, 0, 0, 235, 236, 1, 0, 0, 0, 236,
		237, 6, 20, 0, 0, 237, 42, 1, 0, 0, 0, 238, 239, 5, 40, 0, 0, 239, 44,
		1, 0, 0, 0, 240, 241, 5, 41, 0, 0, 241, 46, 1, 0, 0, 0, 242, 243, 5, 91,
		0, 0, 243, 48, 1, 0, 0, 0, 244, 245, 5, 93, 0, 0, 245, 50, 1, 0, 0, 0,
		246, 247, 5, 44, 0, 0, 247, 52, 1, 0, 0, 0, 248, 249, 5, 124, 0, 0, 249,
		54, 1, 0, 0, 0, 250, 251, 5, 58, 0, 0, 251, 56, 1, 0, 0, 0, 252, 253, 5,
		110, 0, 0, 253, 254, 5, 117, 0, 0, 254, 255, 5, 108, 0, 0, 255, 261, 5,
		108, 0, 0, 256, 257, 5, 78, 0, 0, 257, 258, 5, 85, 0, 0, 258, 259, 5, 76,
		0, 0, 259, 261, 5, 76, 0, 0, 260, 252, 1, 0, 0, 0, 260, 256, 1, 0, 0, 0,
		261, 58, 1, 0, 0, 0, 262, 263, 3, 63, 31, 0, 263, 60, 1, 0, 0, 0, 264,
		289, 3, 59, 29, 0, 265, 267, 5, 45, 0, 0, 266, 265, 1, 0, 0, 0, 266, 267,
		1, 0, 0, 0, 267, 268, 1, 0, 0, 0, 268, 269, 3, 63, 31, 0, 269, 271, 5,
		46, 0, 0, 270, 272, 7, 3, 0, 0, 271, 270, 1, 0, 0, 0, 272, 273, 1, 0, 0,
		0, 273, 271, 1, 0, 0, 0, 273, 274, 1, 0, 0, 0, 274, 276, 1, 0, 0, 0, 275,
		277, 3, 65, 32, 0, 276, 275, 1, 0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 289,
		1, 0, 0, 0, 278, 280, 5, 45, 0, 0, 279, 278, 1, 0, 0, 0, 279, 280, 1, 0,
		0, 0, 280, 281, 1, 0, 0, 0, 281, 282, 3, 63, 31, 0, 282, 283, 3, 65, 32,
		0, 283, 289, 1, 0, 0, 0, 284, 286, 5, 45, 0, 0, 285, 284, 1, 0, 0, 0, 285,
		286, 1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 289, 3, 63, 31, 0, 288, 264,
		1, 0, 0, 0, 288, 266, 1, 0, 0, 0, 288, 279, 1, 0, 0, 0, 288, 285, 1, 0,
		0, 0, 289, 62, 1, 0, 0, 0, 290, 299, 5, 48, 0, 0, 291, 295, 7, 4, 0, 0,
		292, 294, 7, 3, 0, 0, 293, 292, 1, 0, 0, 0, 294, 297, 1, 0, 0, 0, 295,
		293, 1, 0, 0, 0, 295, 296, 1, 0, 0, 0, 296, 299, 1, 0, 0, 0, 297, 295,
		1, 0, 0, 0, 298, 290, 1, 0, 0, 0, 298, 291, 1, 0, 0, 0, 299, 64, 1, 0,
		0, 0, 300, 302, 7, 5, 0, 0, 301, 303, 7, 6, 0, 0, 302, 301, 1, 0, 0, 0,
		302, 303, 1, 0, 0, 0, 303, 304, 1, 0, 0, 0, 304, 305, 3, 63, 31, 0, 305,
		66, 1, 0, 0, 0, 306, 307, 5, 60, 0, 0, 307, 308, 5, 61, 0, 0, 308, 68,
		1, 0, 0, 0, 309, 310, 5, 60, 0, 0, 310, 70, 1, 0, 0, 0, 311, 312, 5, 62,
		0, 0, 312, 313, 5, 61, 0, 0, 313, 72, 1, 0, 0, 0, 314, 315, 5, 62, 0, 0,
		315, 74, 1, 0, 0, 0, 316, 317, 5, 33, 0, 0, 317, 318, 5, 61, 0, 0, 318,
		76, 1, 0, 0, 0, 319, 320, 5, 61, 0, 0, 320, 321, 5, 61, 0, 0, 321, 78,
		1, 0, 0, 0, 322, 325, 5, 46, 0, 0, 323, 326, 3, 39, 19, 0, 324, 326, 3,
		83, 41, 0, 325, 323, 1, 0, 0, 0, 325, 324, 1, 0, 0, 0, 326, 80, 1, 0, 0,
		0, 327, 328, 5, 64, 0, 0, 328, 329, 3, 39, 19, 0, 329, 82, 1, 0, 0, 0,
		330, 335, 5, 34, 0, 0, 331, 334, 3, 85, 42, 0, 332, 334, 8, 7, 0, 0, 333,
		331, 1, 0, 0, 0, 333, 332, 1, 0, 0, 0, 334, 337, 1, 0, 0, 0, 335, 333,
		1, 0, 0, 0, 335, 336, 1, 0, 0, 0, 336, 338, 1, 0, 0, 0, 337, 335, 1, 0,
		0, 0, 338, 339, 5, 34, 0, 0, 339, 84, 1, 0, 0, 0, 340, 343, 5, 92, 0, 0,
		341, 344, 7, 8, 0, 0, 342, 344, 3, 87, 43, 0, 343, 341, 1, 0, 0, 0, 343,
		342, 1, 0, 0, 0, 344, 86, 1, 0, 0, 0, 345, 346, 5, 117, 0, 0, 346, 347,
		3, 89, 44, 0, 347, 348, 3, 89, 44, 0, 348, 349, 3, 89, 44, 0, 349, 350,
		3, 89, 44, 0, 350, 88, 1, 0, 0, 0, 351, 352, 7, 9, 0, 0, 352, 90, 1, 0,
		0, 0, 353, 354, 7, 3, 0, 0, 354, 92, 1, 0, 0, 0, 355, 356, 7, 10, 0, 0,
		356, 94, 1, 0, 0, 0, 357, 358, 7, 11, 0, 0, 358, 96, 1, 0, 0, 0, 359, 360,
		7, 12, 0, 0, 360, 98, 1, 0, 0, 0, 361, 362, 7, 13, 0, 0, 362, 100, 1, 0,
		0, 0, 363, 364, 7, 5, 0, 0, 364, 102, 1, 0, 0, 0, 365, 366, 7, 14, 0, 0,
		366, 104, 1, 0, 0, 0, 367, 368, 7, 15, 0, 0, 368, 106, 1, 0, 0, 0, 369,
		370, 7, 16, 0, 0, 370, 108, 1, 0, 0, 0, 371, 372, 7, 17, 0, 0, 372, 110,
		1, 0, 0, 0, 373, 374, 7, 18, 0, 0, 374, 112, 1, 0, 0, 0, 375, 376, 7, 19,
		0, 0, 376, 114, 1, 0, 0, 0, 377, 378, 7, 20, 0, 0, 378, 116, 1, 0, 0, 0,
		379, 380, 7, 21, 0, 0, 380, 118, 1, 0, 0, 0, 381, 382, 7, 22, 0, 0, 382,
		120, 1, 0, 0, 0, 383, 384, 7, 23, 0, 0, 384, 122, 1, 0, 0, 0, 385, 386,
		7, 24, 0, 0, 386, 124, 1, 0, 0, 0, 387, 388, 7, 25, 0, 0, 388, 126, 1,
		0, 0, 0, 389, 390, 7, 26, 0, 0, 390, 128, 1, 0, 0, 0, 391, 392, 7, 27,
		0, 0, 392, 130, 1, 0, 0, 0, 393, 394, 7, 28, 0, 0, 394, 132, 1, 0, 0, 0,
		395, 396, 7, 29, 0, 0, 396, 134, 1, 0, 0, 0, 397, 398, 7, 30, 0, 0, 398,
		136, 1, 0, 0, 0, 399, 400, 7, 31, 0, 0, 400, 138, 1, 0, 0, 0, 401, 402,
		7, 32, 0, 0, 402, 140, 1, 0, 0, 0, 403, 404, 7, 33, 0, 0, 404, 142, 1,
		0, 0, 0, 405, 406, 7, 34, 0, 0, 406, 144, 1, 0, 0, 0, 407, 411, 5, 35,
		0, 0, 408, 410, 9, 0, 0, 0, 409, 408, 1, 0, 0, 0, 410, 413, 1, 0, 0, 0,
		411, 412, 1, 0, 0, 0, 411, 409, 1, 0, 0, 0, 412, 414, 1, 0, 0, 0, 413,
		411, 1, 0, 0, 0, 414, 415, 5, 10, 0, 0, 415, 416, 1, 0, 0, 0, 416, 417,
		6, 72, 0, 0, 417, 146, 1, 0, 0, 0, 19, 0, 222, 228, 234, 260, 266, 273,
		276, 279, 285, 288, 295, 298, 302, 325, 333, 335, 343, 411, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SLQLexerInit initializes any static state used to implement SLQLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSLQLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SLQLexerInit() {
	staticData := &slqlexerLexerStaticData
	staticData.once.Do(slqlexerLexerInit)
}

// NewSLQLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSLQLexer(input antlr.CharStream) *SLQLexer {
	SLQLexerInit()
	l := new(SLQLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &slqlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SLQ.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SLQLexer tokens.
const (
	SLQLexerT__0        = 1
	SLQLexerT__1        = 2
	SLQLexerT__2        = 3
	SLQLexerT__3        = 4
	SLQLexerT__4        = 5
	SLQLexerT__5        = 6
	SLQLexerT__6        = 7
	SLQLexerT__7        = 8
	SLQLexerT__8        = 9
	SLQLexerT__9        = 10
	SLQLexerT__10       = 11
	SLQLexerT__11       = 12
	SLQLexerT__12       = 13
	SLQLexerT__13       = 14
	SLQLexerT__14       = 15
	SLQLexerGROUP_BY    = 16
	SLQLexerORDER_ASC   = 17
	SLQLexerORDER_DESC  = 18
	SLQLexerORDER_BY    = 19
	SLQLexerID          = 20
	SLQLexerWS          = 21
	SLQLexerLPAR        = 22
	SLQLexerRPAR        = 23
	SLQLexerLBRA        = 24
	SLQLexerRBRA        = 25
	SLQLexerCOMMA       = 26
	SLQLexerPIPE        = 27
	SLQLexerCOLON       = 28
	SLQLexerNULL        = 29
	SLQLexerNN          = 30
	SLQLexerNUMBER      = 31
	SLQLexerLT_EQ       = 32
	SLQLexerLT          = 33
	SLQLexerGT_EQ       = 34
	SLQLexerGT          = 35
	SLQLexerNEQ         = 36
	SLQLexerEQ          = 37
	SLQLexerNAME        = 38
	SLQLexerHANDLE      = 39
	SLQLexerSTRING      = 40
	SLQLexerLINECOMMENT = 41
)
